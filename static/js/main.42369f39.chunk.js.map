{"version":3,"sources":["services/actions/data/index.ts","hooks/index.ts","components/sentence/sentence.tsx","App.tsx","services/utils/loadScript.ts","reportWebVitals.ts","services/utils/RandomUtils.ts","services/reducers/data/index.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/sentence/sentence.module.css"],"names":["DataActionType","useAppSelector","useSelector","Sentence","sentence","className","styles","main","App","dispatch","useCommonDispatch","state","data","sentences","lastSentenceIndex","useEffect","url","window","location","Promise","resolve","reject","document","Error","tag","getElementsByTagName","script","createElement","type","src","async","onload","onerror","msg","console","log","onabort","parentNode","insertBefore","then","INIT_DATA","catch","e","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","RandomUtils","str","seed","xmur3","sfc32","a","b","c","d","t","i","h","length","Math","imul","charCodeAt","shuffleWithSeed","arr","tmp","randomI","MAX","randomGenerator","getRandomGeneratorForString","round","InitialDataState","getPredefinedSentences","SENTENCES","split","map","line","trim","filter","currentMs","Date","now","rootReducer","combineReducers","action","NEXT_SENTENCE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","AppStore","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42369f39.chunk.js","sourcesContent":["export enum DataActionType {\r\n    INIT_DATA = 'INIT_DATA',\r\n    NEXT_SENTENCE = 'NEXT_SENTENCE',\r\n}\r\n\r\nexport type DataAction =\r\n    | { type: DataActionType.INIT_DATA, sentences: string[] }\r\n    | { type: DataActionType.NEXT_SENTENCE }","import {TypedUseSelectorHook, useDispatch as useCommonDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch, AppThunk, RootState} from \"../services/store\";\r\nimport {IDataState} from \"../services/reducers/data\";\r\n\r\nexport const useDispatch = ()  => useCommonDispatch<AppDispatch | AppThunk>();\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport function useDataState(): IDataState {\r\n    return useAppSelector((state: RootState) => ({ ...state.data }));\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './sentence.module.css';\r\n\r\nexport interface ISentenceProps {\r\n    sentence: string\r\n}\r\n\r\nexport const Sentence: React.FC<ISentenceProps> = ({sentence}) => {\r\n    return (\r\n        <div className={styles.main}>{sentence}</div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {useDataState, useDispatch} from \"./hooks\";\nimport {DataActionType} from \"./services/actions\";\nimport {Sentence} from \"./components/sentence/sentence\";\nimport {loadScript} from \"./services/utils/loadScript\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n\n    const {sentences, lastSentenceIndex} = useDataState();\n    const sentence = sentences[lastSentenceIndex] ?? 'NO SENTENCE';\n\n    useEffect(() => {\n        loadScript(window.location + '/data/sentences.js')\n            .then(() => {\n                dispatch({type: DataActionType.INIT_DATA})\n            }).catch(e => console.warn(e));\n\n    }, [dispatch])\n\n    console.log('sentences', sentences)\n\n    return (\n        <div className=\"App\">\n            <Sentence sentence={sentence}/>\n        </div>\n    );\n}\n\nexport default App;\n","export function loadScript (url:string) {\r\n    return new Promise((resolve, reject)=> {\r\n        if (!document) {\r\n            reject(new Error('Document was not defined'));\r\n        }\r\n        const tag = document.getElementsByTagName('script')[0];\r\n        const script = document.createElement('script');\r\n\r\n        script.type = 'text/javascript';\r\n        script.src = url;\r\n        script.async = true;\r\n\r\n        script.onload = () => resolve(script);\r\n\r\n        script.onerror = (msg) => {\r\n            console.log(msg);\r\n            reject(new Error('Error loading script.'));\r\n        };\r\n\r\n        script.onabort = (msg) => {\r\n            console.log(msg);\r\n            reject(new Error('Script loading aboirted.'));\r\n        };\r\n\r\n        if (tag.parentNode != null) {\r\n            tag.parentNode.insertBefore(script, tag);\r\n        }\r\n    })\r\n} ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export class RandomUtils {\r\n    static getRandomGeneratorForString(str: string): Function {\r\n        const seed = xmur3(str);\r\n        const randGenerator = sfc32(seed(), seed(), seed(), seed());\r\n        return randGenerator;\r\n    }\r\n\r\n    static shuffleWithSeed = shuffleWithSeed;\r\n}\r\n\r\n/**\r\n * Перемешать массив, результат повторяется при каждом seed\r\n * @param arr\r\n * @param seed -\r\n */\r\nfunction shuffleWithSeed<T>(arr: Array<T>, seed: number = 17): Array<T> {\r\n    let i: number, next: T, tmp: T;\r\n    let length = arr.length;\r\n    let MAX = arr.length - 1;\r\n    const seed2 = 31; // оба сида должны быть простыми числами\r\n    let randomI: number;\r\n\r\n    const randomGenerator = RandomUtils.getRandomGeneratorForString('' + seed);\r\n\r\n    for (i = 0; i < length; i++) {\r\n        randomI = Math.round(randomGenerator() * MAX);\r\n        tmp = arr[randomI];\r\n        arr[randomI] = arr[i];\r\n        arr[i] = tmp;\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction getRandomGeneratorForString(str: string): Function {\r\n    const seed = xmur3(str);\r\n    const randGenerator = sfc32(seed(), seed(), seed(), seed());\r\n    return randGenerator;\r\n}\r\n\r\n/***\r\n * https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\r\n */\r\n// создает рандомный генератор  при передаче 4 seed\r\nfunction sfc32(a: number, b: number, c: number, d: number) {\r\n    return function () {\r\n        a >>>= 0;\r\n        b >>>= 0;\r\n        c >>>= 0;\r\n        d >>>= 0;\r\n        var t = (a + b) | 0;\r\n        a = b ^ b >>> 9;\r\n        b = c + (c << 3) | 0;\r\n        c = (c << 21 | c >>> 11);\r\n        d = d + 1 | 0;\r\n        t = t + d | 0;\r\n        c = c + t | 0;\r\n        return (t >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\n// генерирует рандомное число из слова\r\nfunction xmur3(str: string) {\r\n    let i: number;\r\n    let h = 1779033703 ^ str.length;\r\n    for (i = 0; i < str.length; i++) {\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\r\n        h = h << 13 | h >>> 19;\r\n    }\r\n\r\n    return function () {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    }\r\n}\r\n","import {DataAction, DataActionType} from \"../../actions\";\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\n\r\nexport interface IDataState {\r\n    sentences: string[];\r\n    lastSentenceIndex: number;\r\n}\r\n\r\nexport const InitialDataState: IDataState = {\r\n    sentences: [],\r\n    lastSentenceIndex: 0,\r\n};\r\n\r\nexport function dataReducer(state: IDataState = InitialDataState, action: DataAction): IDataState {\r\n    switch (action.type) {\r\n        case DataActionType.INIT_DATA:\r\n            return {\r\n                ...state,\r\n                sentences: getPredefinedSentences()\r\n            }\r\n        case DataActionType.NEXT_SENTENCE:\r\n            return {\r\n                ...state,\r\n                lastSentenceIndex: state.lastSentenceIndex + 1\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n/**\r\n * Чтобы это работало\r\n * надо включить в html скрипт data/sentences\r\n * все выражения 1 строковой константой\r\n */\r\ninterface SentencesWindow {\r\n    SENTENCES?: string;\r\n}\r\n\r\nfunction getPredefinedSentences(): string[] {\r\n    const {SENTENCES} = window as SentencesWindow;\r\n\r\n    let sentences: string[] = [];\r\n\r\n    if (SENTENCES) {\r\n        sentences = SENTENCES.split('\\n')\r\n            .map(line => line.trim())\r\n            .filter(line => line.length > 0);\r\n\r\n        const currentMs = Date.now();\r\n        sentences = RandomUtils.shuffleWithSeed(sentences, currentMs);\r\n\r\n    }\r\n    return sentences;\r\n}","import {combineReducers} from \"redux\";\r\nimport {dataReducer, IDataState} from \"./data\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    data: dataReducer\r\n});\r\n\r\nexport interface IRootState {\r\n    data: IDataState;\r\n}","import {Action, ActionCreator, applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {DataAction} from \"./actions/\";\r\nimport {rootReducer} from \"./reducers\";\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\ntype AppAction = DataAction;\r\n\r\n\r\nexport const AppStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n    ));\r\n\r\n\r\nexport type RootState = ReturnType<typeof AppStore.getState>\r\nexport type AppDispatch = typeof AppStore.dispatch;\r\n\r\n\r\nexport type AppThunk<TReturn = void> = ActionCreator<ThunkAction<TReturn, Action, RootState, AppAction>>;\r\n\r\nexport interface IGetState {\r\n    (): RootState;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppStore} from \"./services/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={AppStore}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"sentence_main__1L8i6\"};"],"sourceRoot":""}